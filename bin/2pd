#!/usr/bin/env sh
# This script is part of Martin V\"ath's archwrap project.
# (C) Martin V\"ath <martin at mvath.de>
# SPDX-License-Identifier: BSD-3-Clause
set -u
Echo() {
	printf '%s\n' "$*"
}

Fatal() {
	Echo "${0##*/}: $*" >&2
	exit 2
}

Usage() {
	Echo "Usage: ${0##*/} [option] ... [option] archive archive ...
Repack archives.
Option is one of the following:
-tmp   use current directory instead of /tmp for tempdirectory
-L     convert pathnames into lower case (only for .zip)
-d     use pd -d. Assumes that archive contains only directory 'archive'
-x     do *not* restore user/group id when restoring (only for .zip)
-uw    unset write permissions for group/other before repacking
-ur    unset read/write permissions for group/other before repacking
-u/-ua unset read/write/execute for group/other before repacking
-Uw    ignore previous -uw
-Ur    ignore previous -ur
-U/-Ua ignore previous -u/-ua
-r     rename directories rcs into RCS (requires mmv)
-q     quiet
-v     verbose
--     last option
All other options are passed to pd"
	exit ${1:-1}
}

unpackl=
uall=false
uread=false
uwrite=false
renrcs=false
withparent=
unpackx='-X'
usetemp=:
quiet=false
verbose=false
case ${0##*/} in
*ppd*)
	packopt='-P';;
esac
while [ $# -gt 0 ]
do	case $1 in
	--[hH]*|-h|'-?')
		Usage 0;;
	-L)	unpackl='-L';;
	-x)	unpackx=;;
	-u|-ua)	uall=:;;
	-ur)	uread=:;;
	-uw)	uwrite=:;;
	-r)	renrcs=:;;
	-U|-Ua)	uall=false;;
	-Ur)	uread=false;;
	-Uw)	uwrite=false;;
	-tmp)	usetemp=false;;
	-d)	withparent='-d';;
	--)	shift
		break;;
	-q)	quiet=:;;
	-v)	verbose=:;;
	-*)	packopt="$packopt $1";;
	*)	break;;
	esac
	shift
done
[ $# -ne 0 ] || Usage

! ${quiet} || packopt="$packopt -q"
unpackq=-q
if ${verbose}
then	packopt="$packopt -v"
	unpackq=
fi

chmod=:
if $uread || $uwrite || $uall
then	chmod=chmod
	$uread && $uwrite && uall=:
	$uread  && chmodarg='go-rx'
	$uwrite && chmodarg='go-w'
	$uall   && chmodarg='go-rwx'
fi

currd=$PWD || currd=
case $currd in
/*)	:;;
*)	Fatal 'cannot determine current directory';;
esac

Cd() {
	case $1 in
	/*)	cd "$1" >/dev/null 2>&1 || Fatal "cd $1 failed";;
	*)	cd "./${1#./}" >/dev/null 2>&1 || Fatal "cd $PWD/${1#./} failed";;
	esac
}

rmdirname=
Gosane() {
	trap : EXIT HUP INT TERM
	[ -z "${rmdirname:++}" ] || {
		cd "$currd" >/dev/null \
		&& test -d "$rmdirname" \
		&& rm -rf -- "$rmdirname" && rmdirname=
	}
	trap - EXIT HUP INT TERM
}

for repack
do	test -d "$repack" || continue
	repackp=`readlink -f -- "$repack"` && [ -n "${repackp:++}" ] \
		&& test -d "$repackp" || Fatal "cannot resolve $repack"
	repackp=${repack%/*}
	full=${repack##*/}
	blank=$full
	for bl in \
		z br bro brotli tbr zst zstd tzst tzstd tzs tl4 tz4 tlz4 lz4 \
		bz2 bz tbz2 tbz gz tgz taz dir 7z t7z lz lzm lzma \
		xz tlz txz lrz tlr tlrz lha lzh arj arz zip jar okular rar \
		Z BR BRO BROTLI TBR ZST ZSTD TZST TZSTD TZS TL4 TZ4 TLZ4 LZ4 \
		BZ2 BZ TBZ2 TBZ GZ TGZ TAZ DIR 7Z T7Z LZ LZM LZMA \
		XZ TLZ TXZ LRZ TLR TLRZ LHA LZH ARJ ARZ ZIP JAR OKULAR RAR
	do	case $blank in
		*.tar."$bl"|*.TAR."$bl")
			blank=${blank%.*.*}
			break;;
		*."$bl")
			blank=${blank%.*}
			break;;
		esac
	done
	rmdirname=
	trap Gosane EXIT HUP INT TERM
	if [ -n "${usetemp:++}" ]
	then	rmdirname=`umask 077 && mktemp -d -- "${TMPDIR:-/tmp}/${0##*/}.XXXXXXXX"` \
			&& [ -n "${rmdirname:++}" ] && test -d "$rmdirname" \
			|| Fatal 'cannot create temporary directory'
		unpackp=$rmdirname
	else	unpackp=$currd
	fi
	tempdirname=$unpackp/$blank
	test -r "$tempdirname" && Fatal "$tempdirname already exists"
	Cd "$unpackp"
	u -d $unpackq $unpackx $unpackl -- "$repackp/$full" || \
		Fatal "cannot unpack $repackp/$full"
	Cd "$repackp"
	$chmod -R -- "$chmodarg" "$tempdirname"
	$renrcs && ! test -r "$tempdirname/RCS" \
		&& mmv -r -- "$tempdirname/;rcs" 'RCS'
	tempsub=$tempdirname
	[ -n "${withparent:++}" ] && tempsub=$tempsub/$blank
	pd $withparent $packopt -- "$tempsub" || \
		Fatal "Packing $tempsub failed"
	Gosane
done
